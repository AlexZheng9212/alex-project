<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.alex.blog.mapper.ArticleMapper">
<cache readOnly="true" blocking="true" flushInterval="60000"/>
<sql id="articleColumns">
id,
title,
content,
category,
author,
status,
created_at,
updated_at
</sql>

<sql id="findByCondition">
<where>
<if test="article != null">
<if test="article.id != null">
id = #{article.id}::uuid
</if>
<if test="article.title != null">
AND rank = #{article.title}
</if>
<if test="article.category != null">
AND category = #{article.category}
</if>
<if test="article.author != null">
AND author = #{article.author}
</if>
<if test="article.status != null">
AND status = #{article.status}
</if>
</if>
</where>
limit #{limit}
offset #{offset}
</sql>

<insert id="create">
INSERT INTO blog_article(<include refid="articleColumns"/>)
VALUES (
  #{article.id}::uuid,#{article.title},#{article.content},#{article.category},#{article.author},#{article.status},now(),now()
)
</insert>

<update id="update">
UPDATE blog_article 
<set>
<if test="article.title != null">
title = #{article.title},
</if>
<if test="article.content != null">
content = #{article.content},
</if>
<if test="article.status != null">
status = #{article.status},
</if>
updated_at = now()
</set>
WHERE id = #{article.id}
</update>

<select id="listByRequest" resultType="Article">
SELECT <include refid="articleColumns" /> FROM blog_article
<include refid="findByCondition" />
</select>

<select id="findById" resultType="Article">
SELECT <include refid="articleColumns"/> FROM blog_article
WHERE id = #{id}
</select>

<insert id="bulkCreate" parameterType="List">
INSERT INTO blog_article(<include refid="articleColumns"/>)
VALUES 
<foreach collection="articles" item="item" open="" separator="," close="">
  (
  UUID(),
  #{item.title},
  'bili',
  #{item.category},
  #{item.author},
  #{item.status},
  now(),
  now()
  )
</foreach>
</insert>

</mapper>